__author__="Sunil.Katta"

import boto3
import re
import json

class CreateS3Bucket:

    def __init__(self,service_type,aws_access_key_id,aws_secret_access_key,region_name,user):
        self.service_type=service_type
        self.aws_access_key_id=aws_access_key_id
        self.aws_secret_access_key=aws_secret_access_key
        self.region_name=region_name
        self.user=user

    def get_account_id(self):

        try:
            iam = boto3.resource(self.service_type,
                                 aws_access_key_id=self.aws_access_key_id,
                                 aws_secret_access_key=self.aws_secret_access_key,
                                 )
            account_id = iam.CurrentUser().arn
            return account_id
        except Exception as err:
            print("Error in getting user details : "+err)
            return "FAILURE"

    def createBucket(self, bucket_name):
        s3 = boto3.resource(self.service_type,aws_access_key_id=self.aws_access_key_id,
                                 aws_secret_access_key=self.aws_secret_access_key)
        bucket = s3.create_bucket(ACL='public-read-write',Bucket=bucket_name,CreateBucketConfiguration={'LocationConstraint':'ap-south-1'})

        for i in s3.buckets.all():
            print(i.name);

        print("Bucket Name: %s" % bucket.name)
        return bucket.name

    def uploadFile(self, bucket_name):

        try:
            s3=boto3.client(self.service_type,aws_access_key_id=self.aws_access_key_id,
                                 aws_secret_access_key=self.aws_secret_access_key)
            s3.upload_file('sunilkatta.txt',bucket_name,'sunil.txt')
            return "SUCCESS"
        except Exception as err:
            print("FAILURE : "+err)
            return "FAILURE"
        #bucket = s3.create_bucket(ACL='public-read-write',Bucket=bucket_name,CreateBucketConfiguration={'LocationConstraint':'ap-south-1'})

