__author__="Sunil.Katta"
import boto3

class CreateEc2Instance:
    def __init__(self,service_type,aws_access_key_id,aws_secret_access_key,region_name):
        self.service_type=service_type
        self.aws_access_key_id=aws_access_key_id
        self.aws_access_key_id=aws_access_key_id
        self.aws_secret_access_key=aws_secret_access_key
        self.region_name=region_name

    def createinstance(self,ami_id,instance_type):
        #ec2 = boto3.resource('ec2', aws_access_key_id='AWS_ACCESS_KEY_ID',
         #                    aws_secret_access_key='AWS_SECRET_ACCESS_KEY',
          #                   region_name='ap-south-2')
        ec2 = boto3.resource(self.service_type, self.aws_access_key_id,
                             self.aws_secret_access_key, self.region_name)

        # create VPC
        try:
            vpc = ec2.create_vpc(CidrBlock='192.168.0.0/16')
            # we can assign a name to vpc, or any resource, by using tag
            vpc.create_tags(Tags=[{"Key": "Name", "Value": "default_vpc"}])
            vpc.wait_until_available()
            print(vpc.id)
        except Exception as err:
            return "Exception in Creating VPC"+err

        # create then attach internet gateway
        try:
            ig = ec2.create_internet_gateway()
            vpc.attach_internet_gateway(InternetGatewayId=ig.id)
            print(ig.id)
        except Exception as err:
            return "Exception in Creating VPC" + err

        # create a route table and a public route
        try:
            route_table = vpc.create_route_table()
            route = route_table.create_route(
                DestinationCidrBlock='0.0.0.0/0',
                GatewayId=ig.id
            )
            print(route_table.id)
        except Exception as err:
            return "Exception in Creating VPC"+err

        # create subnet
        try:
            subnet = ec2.create_subnet(CidrBlock='192.168.1.0/24', VpcId=vpc.id)
            print(subnet.id)
        except Exception as err:
            return "Exception in Creating VPC"+err

        # associate the route table with the subnet
        route_table.associate_with_subnet(SubnetId=subnet.id)

        # Create sec group
        try:
            sec_group = ec2.create_security_group(
                GroupName='sampleGroup', Description='sampleGroup', VpcId=vpc.id)
            sec_group.authorize_ingress(
                CidrIp='0.0.0.0/0',
                IpProtocol='icmp',
                FromPort=-1,
                ToPort=-1
            )
            print(sec_group.id)
        except Exception as err:
            return "Exception in Creating VPC"+err

        # Create instance
        # Reference Server details : (AMI Details, Instance Type, Security Groups, Instance Details, Storage, Tags)
        #Sample AMI : 'ami-835b4efa'
        try:
            instances = ec2.create_instances(
                ImageId=ami_id, InstanceType=instance_type, MaxCount=1, MinCount=1,
                NetworkInterfaces=[{'SubnetId': subnet.id, 'DeviceIndex': 0, 'AssociatePublicIpAddress': True,
                                    'Groups': [sec_group.group_id]}])
        except Exception as err:
            return "Exception in Creating VPC" + err
        instances[0].wait_until_running()
        print(instances[0].id)
        return instances[0].id
